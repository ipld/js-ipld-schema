schema: |
  type SimpleStruct struct {
    foo Int
    bar Bool
    baz String
  }

  type SimpleEnum enum {
    | Foo
    | Bar
    | Baz
  }

  type Bloop {String:&Any}

  type CopyOfSimpleStruct = SimpleStruct

  type CopyOfSimpleEnum = SimpleEnum

  type Bloop2 = Bloop
expected: |
  {
    "types": {
      "SimpleStruct": {
        "struct": {
          "fields": {
            "foo": {
              "type": "Int"
            },
            "bar": {
              "type": "Bool"
            },
            "baz": {
              "type": "String"
            }
          },
          "representation": {
            "map": {}
          }
        }
      },
      "SimpleEnum": {
        "enum": {
          "members": [
            "Foo",
            "Bar",
            "Baz"
          ],
          "representation": {
            "string": {}
          }
        }
      },
      "Bloop": {
        "map": {
          "keyType": "String",
          "valueType": {
            "link": {
              "expectedType": "Any"
            }
          }
        }
      },
      "CopyOfSimpleStruct": {
        "copy": {
          "fromType": "SimpleStruct"
        }
      },
      "CopyOfSimpleEnum": {
        "copy": {
          "fromType": "SimpleEnum"
        }
      },
      "Bloop2": {
        "copy": {
          "fromType": "Bloop"
        }
      }
    }
  }
